#!/usr/bin/env bash

# Theme inspired by:
#  - Bash_it cupcake theme

# virtualenv prompts
VIRTUALENV_THEME_PROMPT_PREFIX=""
VIRTUALENV_THEME_PROMPT_SUFFIX=""

# SCM prompts
SCM_NONE_CHAR=""
SCM_GIT_CHAR="[±] "
SCM_GIT_BEHIND_CHAR="${red}↓${normal}"
SCM_GIT_AHEAD_CHAR="${bold_green}↑${normal}"
SCM_GIT_UNTRACKED_CHAR="⌀"
SCM_GIT_UNSTAGED_CHAR="${bold_yellow}•${normal}"
SCM_GIT_STAGED_CHAR="${bold_green}+${normal}"

SCM_THEME_PROMPT_DIRTY=""
SCM_THEME_PROMPT_CLEAN=""
SCM_THEME_PROMPT_PREFIX=""
SCM_THEME_PROMPT_SUFFIX=""

# Git status prompts
GIT_THEME_PROMPT_DIRTY=" ${red}✗${normal}"
GIT_THEME_PROMPT_CLEAN=" ${bold_green}✓${normal}"
GIT_THEME_PROMPT_PREFIX=""
GIT_THEME_PROMPT_SUFFIX=""

# ICONS =======================================================================

icon_start="┌"
icon_directory=" 📁"
icon_branch="🌿"
icon_end="└❯ "

# FUNCTIONS ===================================================================

# Display virtual environment info
function virtualenv_prompt() {
  if [[ -n "$VIRTUAL_ENV" ]]; then
    virtualenv=$(basename "$VIRTUAL_ENV")
    echo -e "($virtualenv)"
  fi
}

# Rename tab
function tabname() {
  printf "\e]1;$1\a"
}

# Rename window
function winname() {
  printf "\e]2;$1\a"
}

function branch_icon() {
  local unsafe_ref=$(command git symbolic-ref -q HEAD 2>/dev/null)
  local stripped_ref=${unsafe_ref##refs/heads/}
  local clean_ref=${stripped_ref//[^a-zA-Z0-9\/]/-}
  if ! test -z $clean_ref; then
    echo "${icon_branch} "
  fi
}

# PROMPT OUTPUT ===============================================================

# Displays the current prompt
function prompt_command() {
  PS1="\n${bold_white}${icon_start} ${bold_cyan}$(virtualenv_prompt) \
${bold_red}\u${normal}${icon_directory} ${bold_yellow}\w${green} \
$(branch_icon)$(scm_prompt_info)${normal}\n${icon_end}"
  PS2="${icon_end}"
}

# Runs prompt (this bypasses oh-my-bash $PROMPT setting)
safe_append_prompt_command prompt_command
